#!/usr/bin/env ruby

require 'cloudapp/credentials'
require 'cloudapp/cli/prompt'
require 'cloudapp/service'

def service
  CloudApp::Service.using_token token
end

def token
  Credentials.token
end

def valid_token?
  !token.nil? and service.root.authorized?
end

def error error
  puts "ERROR: #{error}"
  exit 1
end

def validate_url url
  error 'URL missing' if url.nil?
  error "#{ url } doesn't look like a valid URL" unless url =~ URI.regexp
end

def validate_file file
  error "File doesn't exist" if file.is_a? Errno::ENOENT
  error 'File missing'       if file.nil? or file == STDIN
end


while not valid_token?
  credentials = CloudApp::CLI::Prompt.new.ask_for_credentials
  token = CloudApp::Service.token_for_account *credentials
  Credentials.save_token token
end

link = ARGV.delete('--direct') || ARGV.delete('-d') ? :embed : :canonical

case ARGV.shift
when 'bookmark'
  link = :canonical  # No such thing as an embed link for a bookmark.
  url  = ARGV.shift
  validate_url url
  puts service.bookmark(url).link(link)
when 'upload'
  file = ARGF.file rescue $!
  validate_file file
  puts service.upload(file).link(link)
else
  puts <<EOS
Usage:
    cloudapp bookmark http://getcloudapp.com
    cloudapp upload screenshot.png
EOS
end
